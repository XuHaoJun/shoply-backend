//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.6

use sea_orm::entity::{prelude::*, Set};
use serde_repr::*;

use crate::Uuid;

#[derive(
    EnumIter, DeriveActiveEnum, Serialize_repr, Deserialize_repr, Eq, PartialEq, Debug, Clone,
)]
#[sea_orm(rs_type = "i32", db_type = "Integer")]
#[repr(i32)]
pub enum OtpType {
    Email = 0,
    Phone = 1,
}

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "member_auth")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: Uuid,
    pub otp_type: OtpType,
    pub otp: String,
    pub exipred_at: DateTimeUtc,
    pub is_verified: bool,

    pub email: Option<String>,
    pub phone: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {
    fn new() -> Self {
        Self {
            id: Set(Uuid::now_v7()),
            ..ActiveModelTrait::default()
        }
    }
}
